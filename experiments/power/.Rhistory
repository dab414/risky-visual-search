install.packages('simr')
library(tidyverse)
library(data.table)
library(lme4)
library(ez)
d <- read.csv('dstCleanChoice1.csv')
d$ssd <- ifelse(d$selectedRiskyDeck == 1, 0, 1)
head(d)
d$differenceE <- ifelse(d$difference == 'Moderate', -0.5, 0.5)
d$difficultyE <- ifelse(d$difficulty == 'Easier than Reference', -0.5, 0.5)
m1 <- glmer(selSafeDeck ~ difficultyE * differenceE + (1 | subject) + (0 + difficultyE | subject) + (0 + differenceE | subject), data = d , family = binomial, control = glmerControl(optimizer = 'bobyqa'))
d$differenceE <- ifelse(d$difference == 'Moderate', -0.5, 0.5)
d$difficultyE <- ifelse(d$difficulty == 'Easier than Reference', -0.5, 0.5)
m1 <- glmer(ssd ~ difficultyE * differenceE + (1 | subject) + (0 + difficultyE | subject) + (0 + differenceE | subject), data = d , family = binomial, control = glmerControl(optimizer = 'bobyqa'))
summary(m1)
library(simr)
sim_ext_subject <- extend(m1, along='subject', n = 150)
sim_ext_subject
powerResult <- powerCurve(sim_ext_subject, test=fcompare(selSafeDeck ~ differenceE), along = 'subject', breaks = seq(70,150,by = 10), nsim = 100)
powerResultDf <- data.frame(summary(powerResult))
save(powerResultDf, file = 'powerResultDf.Rdata')
powerResultDf
ggplot(powerResultDf, aes(x = factor(nlevels), y = mean, group = 1)) +
geom_line(linetype = 'dotdash', color = 'dodgerblue4') +
geom_errorbar(aes(ymin = lower, ymax = upper), color = 'dodgerblue4') +
geom_point(shape = 19, color = 'dodgerblue4', fill = 'dodgerblue4') +
geom_hline(yintercept = .8, linetype = 'dashed') +
labs(
x = 'Sample Size',
y = 'Power to Detect Difficulty Effect',
caption = 'Each estimate computed via 100 MCMC simulations'
) +
ylim(0,1) +
theme_bw() +
annotate('text', x = factor(70), y = .85, label = '0.8 Power')
## logic of the below line: https://humburg.github.io/Power-Analysis/simr_power_analysis.html
powerResult <- powerCurve(sim_ext_subject, test=fcompare(ssd ~ differenceE), along = 'subject', breaks = seq(70,150,by = 10), nsim = 100)
powerResultDf <- data.frame(summary(powerResult))
save(powerResultDf, file = 'powerResultDf.Rdata')
ggplot(powerResultDf, aes(x = factor(nlevels), y = mean, group = 1)) +
geom_line(linetype = 'dotdash', color = 'dodgerblue4') +
geom_errorbar(aes(ymin = lower, ymax = upper), color = 'dodgerblue4') +
geom_point(shape = 19, color = 'dodgerblue4', fill = 'dodgerblue4') +
geom_hline(yintercept = .8, linetype = 'dashed') +
labs(
x = 'Sample Size',
y = 'Power to Detect Difficulty Effect',
caption = 'Each estimate computed via 100 MCMC simulations'
) +
ylim(0,1) +
theme_bw() +
annotate('text', x = factor(70), y = .85, label = '0.8 Power')
## logic of the below line: https://humburg.github.io/Power-Analysis/simr_power_analysis.html
powerResult <- powerCurve(sim_ext_subject, test=fcompare(ssd ~ differenceE), along = 'subject', breaks = seq(10, 70,by = 10), nsim = 100)
powerResultDf <- data.frame(summary(powerResult))
save(powerResultDf, file = 'powerResultDf10-70.Rdata')
ggplot(powerResultDf, aes(x = factor(nlevels), y = mean, group = 1)) +
geom_line(linetype = 'dotdash', color = 'dodgerblue4') +
geom_errorbar(aes(ymin = lower, ymax = upper), color = 'dodgerblue4') +
geom_point(shape = 19, color = 'dodgerblue4', fill = 'dodgerblue4') +
geom_hline(yintercept = .8, linetype = 'dashed') +
labs(
x = 'Sample Size',
y = 'Power to Detect Difficulty Effect',
caption = 'Each estimate computed via 100 MCMC simulations'
) +
ylim(0,1) +
theme_bw() +
annotate('text', x = factor(70), y = .85, label = '0.8 Power')
powerResultDf
q()
